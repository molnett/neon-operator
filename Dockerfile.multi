# Multi-stage Dockerfile for cross-platform builds
FROM --platform=$BUILDPLATFORM rust:1.87-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    python3 \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Install zigbuild for cross-compilation
RUN pip3 install --break-system-packages ziglang && cargo install cargo-zigbuild

WORKDIR /usr/src/app

# Copy manifests
COPY Cargo.toml Cargo.lock ./
COPY crates/ ./crates/

# Build arguments for target architecture
ARG TARGETPLATFORM
ARG BUILDPLATFORM

# Map Docker platform to Rust target
RUN case "$TARGETPLATFORM" in \
    "linux/amd64") echo "x86_64-unknown-linux-gnu" > /tmp/rust-target ;; \
    "linux/arm64") echo "aarch64-unknown-linux-gnu" > /tmp/rust-target ;; \
    *) echo "aarch64-unknown-linux-gnu" > /tmp/rust-target ;; \
    esac

# Install the target and build the binary
RUN RUST_TARGET=$(cat /tmp/rust-target) && \
    rustup target add $RUST_TARGET && \
    cargo zigbuild --release --target=$RUST_TARGET -p operator && \
    mkdir -p /tmp/bin && \
    cp target/$RUST_TARGET/release/operator /tmp/bin/

# Runtime stage
FROM gcr.io/distroless/cc-debian12:nonroot

COPY --from=builder --chown=nonroot:nonroot /tmp/bin/operator /app/operator

EXPOSE 8080
ENTRYPOINT ["/app/operator"]

LABEL org.opencontainers.image.title="Neon Operator"
LABEL org.opencontainers.image.description="Kubernetes operator for managing Neon database clusters"
LABEL org.opencontainers.image.source="https://github.com/molnett/neon-operator"
LABEL org.opencontainers.image.vendor="Molnett"
